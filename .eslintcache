[{"E:\\react-app\\src\\index.tsx":"1","E:\\react-app\\src\\store\\index.ts":"2","E:\\react-app\\src\\routes\\index.tsx":"3","E:\\react-app\\src\\store\\user.ts":"4","E:\\react-app\\src\\components\\AsyncComponent.tsx":"5","E:\\react-app\\src\\views\\Home\\Home.tsx":"6","E:\\react-app\\src\\store\\action-type.ts":"7","E:\\react-app\\src\\actions\\user.ts":"8","E:\\react-app\\src\\components\\Navigation.tsx":"9","E:\\react-app\\src\\api\\api.ts":"10","E:\\react-app\\src\\components\\Header.tsx":"11","E:\\react-app\\src\\components\\ShopList.tsx":"12","E:\\react-app\\src\\utils\\request.ts":"13","E:\\react-app\\src\\configs\\envconfig.ts":"14","E:\\react-app\\src\\components\\Loader.tsx":"15","E:\\react-app\\src\\components\\FoodTypeSkeleton.tsx":"16","E:\\react-app\\src\\components\\ShopListSkeleton.tsx":"17","E:\\react-app\\src\\views\\Mine\\Mine.tsx":"18"},{"size":779,"mtime":1607161194464,"results":"19","hashOfConfig":"20"},{"size":156,"mtime":1607160085245,"results":"21","hashOfConfig":"20"},{"size":677,"mtime":1607329070813,"results":"22","hashOfConfig":"20"},{"size":1170,"mtime":1607161002857,"results":"23","hashOfConfig":"20"},{"size":744,"mtime":1606890494315,"results":"24","hashOfConfig":"20"},{"size":5883,"mtime":1607327412000,"results":"25","hashOfConfig":"20"},{"size":248,"mtime":1607159845882,"results":"26","hashOfConfig":"20"},{"size":700,"mtime":1607163671407,"results":"27","hashOfConfig":"20"},{"size":2885,"mtime":1606962348563,"results":"28","hashOfConfig":"20"},{"size":2704,"mtime":1607335738374,"results":"29","hashOfConfig":"20"},{"size":712,"mtime":1607158291377,"results":"30","hashOfConfig":"20"},{"size":3195,"mtime":1607303678688,"results":"31","hashOfConfig":"20"},{"size":967,"mtime":1607157043257,"results":"32","hashOfConfig":"20"},{"size":319,"mtime":1607301567394,"results":"33","hashOfConfig":"20"},{"size":303,"mtime":1607309848196,"results":"34","hashOfConfig":"20"},{"size":470,"mtime":1607326100427,"results":"35","hashOfConfig":"20"},{"size":786,"mtime":1607326508283,"results":"36","hashOfConfig":"20"},{"size":4461,"mtime":1607335799466,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"f2isp3",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\react-app\\src\\index.tsx",["80"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport FastClick from 'fastclick';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport Route from './routes';\nimport roorStore from './store';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { AppContainer } from 'react-hot-loader';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport './assets/styles/base.scss';\n\nFastClick.attach(document.body);\n\nconst store = createStore(roorStore, composeWithDevTools(applyMiddleware(logger, thunk)));\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <Route />\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n",["81","82"],"E:\\react-app\\src\\store\\index.ts",[],"E:\\react-app\\src\\routes\\index.tsx",[],"E:\\react-app\\src\\store\\user.ts",["83"],"import * as UserType from '../store/action-type';\r\n\r\ntype UserType = {\r\n    addressList: string[]; // 地址列表\r\n    addressName: string; // 选中的地址\r\n    temMessage: string; //临时姓名\r\n    hasAddressList: string[]; // 已有的地址\r\n    operate: string;\r\n    userInfo: any;\r\n    geohash: string[];\r\n};\r\n\r\ntype actionType = {\r\n    type: string;\r\n    userInfo: {};\r\n    dataType: string;\r\n    value: string;\r\n};\r\n\r\nconst userInfo: UserType = {\r\n    addressList: [], // 地址列表\r\n    addressName: '', // 选中的地址\r\n    temMessage: '', //临时姓名\r\n    hasAddressList: [], // 已有的地址\r\n    operate: 'edit',\r\n    userInfo: {},\r\n    geohash: [],\r\n};\r\n\r\nconst user = (state: UserType = userInfo, action: actionType) => {\r\n    switch (action.type) {\r\n        case UserType.SAVE_USERINFO:\r\n            return {\r\n                ...state,\r\n                userInfo: action.userInfo,\r\n            };\r\n        case UserType.SAVE_ATTRINFO:\r\n            return {\r\n                ...state,\r\n                ...{ [action.dataType]: action.value },\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default user;\r\n","E:\\react-app\\src\\components\\AsyncComponent.tsx",[],"E:\\react-app\\src\\views\\Home\\Home.tsx",["84"],"import React, { Dispatch } from 'react';\r\nimport Navigation from '../../components/Navigation';\r\nimport Header from '../../components/Header';\r\nimport ShopList from '../../components/ShopList';\r\nimport Loader from '../../components/Loader';\r\nimport FoodTypeSkeleton from '../../components/FoodTypeSkeleton';\r\nimport ShopListSkeleton from '../../components/ShopListSkeleton';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Carousel } from 'antd-mobile';\r\nimport { saveAttrInfo } from '../../actions/user';\r\nimport { is, fromJS } from 'immutable';\r\nimport { getFoodTypes, getPoisSite, cityGuess, getShopList } from '../../api/api';\r\n\r\nimport * as ResType from '../../types/response';\r\n\r\nimport './Home.scss';\r\n\r\ntype HomeState = {\r\n    geohash: string[];\r\n    foodsType: ResType.FootTypeData[][];\r\n    shopList: ResType.ShopData[];\r\n    title: string;\r\n    imgBaseUrl: string;\r\n};\r\nclass Home extends React.Component<{ saveAttrInfo: Dispatch<{ dataType: string; value: string[] }> }, HomeState> {\r\n    constructor(\r\n        props:\r\n            | { saveAttrInfo: React.Dispatch<{ dataType: string; value: string[] }> }\r\n            | Readonly<{ saveAttrInfo: React.Dispatch<{ dataType: string; value: string[] }> }>\r\n    ) {\r\n        super(props);\r\n        this.state = {\r\n            geohash: [],\r\n            foodsType: [],\r\n            shopList: [],\r\n            title: '正在获取...',\r\n            imgBaseUrl: 'https://fuss10.elemecdn.com',\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 获取食物种类\r\n     */\r\n    getFoodTypes = async () => {\r\n        try {\r\n            const data = {\r\n                geohash: this.state.geohash.join(),\r\n                'flag[]': 'F',\r\n                group_type: 1,\r\n            };\r\n            const res = await getFoodTypes(data);\r\n\r\n            const resLength = res.length;\r\n            const resArr = [...res];\r\n            const foodArr = [];\r\n\r\n            for (let i = 0, j = 0; i < resLength; i += 8, j++) {\r\n                foodArr[j] = resArr.splice(0, 8);\r\n            }\r\n            this.setState({\r\n                foodsType: foodArr,\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 根据经纬度获取地点信息\r\n     */\r\n    getPoisSite = async (geohash: string) => {\r\n        try {\r\n            const res = await getPoisSite(geohash);\r\n            this.setState({\r\n                title: res.name,\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 获取经纬度\r\n     */\r\n    cityGuess = async () => {\r\n        try {\r\n            const res = await cityGuess({ type: 'guess' });\r\n            this.setState({\r\n                geohash: [res.latitude, res.longitude],\r\n            });\r\n            this.props.saveAttrInfo({ dataType: 'geohash', value: [res.latitude, res.longitude] });\r\n            this.getPoisSite(this.state.geohash.join());\r\n            this.getFoodTypes();\r\n            this.getShopList(this.state.geohash);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 获取商家列表\r\n     */\r\n    getShopList = async (geohash: string[]) => {\r\n        try {\r\n            const data = {\r\n                latitude: geohash[0],\r\n                longitude: geohash[1],\r\n            };\r\n            const res = await getShopList(data);\r\n            this.setState({\r\n                shopList: res,\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 组件第一次渲染完成，此时dom节点已经生成，可以在这里调用ajax请求，返回数据setState后组件会重新渲染\r\n     */\r\n    componentDidMount() {\r\n        this.cityGuess();\r\n    }\r\n\r\n    /**\r\n     * 判断是否要更新render, return true 更新  return false不更新\r\n     */\r\n    shouldComponentUpdate(nextProps: any, nextState: any): boolean {\r\n        let refresh = !is(fromJS(this.props), fromJS(nextProps)) || !is(fromJS(this.state), fromJS(nextState));\r\n        return refresh;\r\n    }\r\n\r\n    render() {\r\n        const { title, foodsType, imgBaseUrl, shopList } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Header title={title} />\r\n\r\n                <div className='content'>\r\n                    {foodsType.length ? (\r\n                        <Carousel autoplay={false} infinite>\r\n                            {foodsType.map((element, index) => {\r\n                                return (\r\n                                    <ul className='food-list' key={index}>\r\n                                        {element.map((item, i) => {\r\n                                            return (\r\n                                                <li className='food-item' key={i}>\r\n                                                    <img src={imgBaseUrl + item.image_url} alt={item.title} />\r\n                                                    <p>{item.title}</p>\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </ul>\r\n                                );\r\n                            })}\r\n                        </Carousel>\r\n                    ) : (\r\n                        <FoodTypeSkeleton />\r\n                    )}\r\n\r\n                    <div className='shop'>{shopList.length ? <ShopList list={shopList} /> : <ShopListSkeleton />}</div>\r\n                </div>\r\n\r\n                <Navigation />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        saveAttrInfo: ({ dataType, value }: { dataType: string; value: string[] }) =>\r\n            dispatch(saveAttrInfo({ dataType, value })),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Home);\r\n","E:\\react-app\\src\\store\\action-type.ts",[],"E:\\react-app\\src\\actions\\user.ts",[],"E:\\react-app\\src\\components\\Navigation.tsx",[],"E:\\react-app\\src\\api\\api.ts",[],"E:\\react-app\\src\\components\\Header.tsx",[],"E:\\react-app\\src\\components\\ShopList.tsx",[],"E:\\react-app\\src\\utils\\request.ts",[],"E:\\react-app\\src\\configs\\envconfig.ts",[],"E:\\react-app\\src\\components\\Loader.tsx",[],["85","86"],"E:\\react-app\\src\\components\\FoodTypeSkeleton.tsx",[],"E:\\react-app\\src\\components\\ShopListSkeleton.tsx",["87"],"import React from 'react';\r\n\r\nexport default class ShopListSkeleton extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='shop-skeleton'>\r\n                <h3></h3>\r\n                <ul>\r\n                    {new Array(4).fill(undefined).map((_, index) => {\r\n                        return (\r\n                            <li key={index}>\r\n                                <div></div>\r\n                                <div>\r\n                                    <p></p>\r\n                                    <p></p>\r\n                                    <p></p>\r\n                                </div>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","E:\\react-app\\src\\views\\Mine\\Mine.tsx",["88","89","90","91","92"],{"ruleId":"93","severity":1,"message":"94","line":12,"column":10,"nodeType":"95","messageId":"96","endLine":12,"endColumn":22},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":3,"column":6,"nodeType":"95","messageId":"103","endLine":3,"endColumn":14},{"ruleId":"93","severity":1,"message":"104","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":14},{"ruleId":"97","replacedBy":"105"},{"ruleId":"99","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":7,"column":17,"nodeType":"109","endLine":7,"endColumn":21},{"ruleId":"93","severity":1,"message":"110","line":14,"column":10,"nodeType":"95","messageId":"96","endLine":14,"endColumn":17},{"ruleId":"93","severity":1,"message":"111","line":15,"column":10,"nodeType":"95","messageId":"96","endLine":15,"endColumn":21},{"ruleId":"93","severity":1,"message":"112","line":17,"column":10,"nodeType":"95","messageId":"96","endLine":17,"endColumn":12},{"ruleId":"93","severity":1,"message":"113","line":17,"column":14,"nodeType":"95","messageId":"96","endLine":17,"endColumn":20},{"ruleId":"93","severity":1,"message":"114","line":21,"column":13,"nodeType":"95","messageId":"96","endLine":21,"endColumn":20},"@typescript-eslint/no-unused-vars","'AppContainer' is defined but never used.","Identifier","unusedVar","no-native-reassign",["115"],"no-negated-in-lhs",["116"],"@typescript-eslint/no-redeclare","'UserType' is already defined.","redeclared","'Loader' is defined but never used.",["115"],["116"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'connect' is defined but never used.","'getUserInfo' is defined but never used.","'is' is defined but never used.","'fromJS' is defined but never used.","'ResTyps' is defined but never used.","no-global-assign","no-unsafe-negation"]