[{"/Users/huangzx/react-ant/src/index.tsx":"1","/Users/huangzx/react-ant/src/store/index.ts":"2","/Users/huangzx/react-ant/src/actions/user.ts":"3","/Users/huangzx/react-ant/src/views/Home/Home.tsx":"4","/Users/huangzx/react-ant/src/store/action-type.ts":"5","/Users/huangzx/react-ant/src/api/api.ts":"6","/Users/huangzx/react-ant/src/components/Header.tsx":"7","/Users/huangzx/react-ant/src/views/Mine/Mine.tsx":"8","/Users/huangzx/react-ant/src/routes/index.tsx":"9","/Users/huangzx/react-ant/src/components/Navigation.tsx":"10","/Users/huangzx/react-ant/src/utils/request.ts":"11","/Users/huangzx/react-ant/src/components/FoodTypeSkeleton.tsx":"12","/Users/huangzx/react-ant/src/views/Login/Login.tsx":"13","/Users/huangzx/react-ant/src/store/user.ts":"14","/Users/huangzx/react-ant/src/components/AsyncComponent.tsx":"15","/Users/huangzx/react-ant/src/components/ShopList.tsx":"16","/Users/huangzx/react-ant/src/components/ShopListSkeleton.tsx":"17","/Users/huangzx/react-ant/src/configs/envconfig.ts":"18"},{"size":779,"mtime":1607357232762,"results":"19","hashOfConfig":"20"},{"size":147,"mtime":1607185931879,"results":"21","hashOfConfig":"20"},{"size":665,"mtime":1607350300907,"results":"22","hashOfConfig":"20"},{"size":5704,"mtime":1607350123815,"results":"23","hashOfConfig":"20"},{"size":234,"mtime":1607185931879,"results":"24","hashOfConfig":"20"},{"size":2572,"mtime":1607350123808,"results":"25","hashOfConfig":"20"},{"size":684,"mtime":1607185931878,"results":"26","hashOfConfig":"20"},{"size":4332,"mtime":1607350123815,"results":"27","hashOfConfig":"20"},{"size":773,"mtime":1607356208279,"results":"28","hashOfConfig":"20"},{"size":2975,"mtime":1607355890538,"results":"29","hashOfConfig":"20"},{"size":930,"mtime":1607185931881,"results":"30","hashOfConfig":"20"},{"size":453,"mtime":1607350123811,"results":"31","hashOfConfig":"20"},{"size":2545,"mtime":1607359312230,"results":"32","hashOfConfig":"20"},{"size":1122,"mtime":1607185931880,"results":"33","hashOfConfig":"20"},{"size":715,"mtime":1606921180465,"results":"34","hashOfConfig":"20"},{"size":3121,"mtime":1607350123812,"results":"35","hashOfConfig":"20"},{"size":761,"mtime":1607350123812,"results":"36","hashOfConfig":"20"},{"size":307,"mtime":1607249136644,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"qy4byl",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/huangzx/react-ant/src/index.tsx",["78"],"/Users/huangzx/react-ant/src/store/index.ts",[],["79","80"],"/Users/huangzx/react-ant/src/actions/user.ts",[],"/Users/huangzx/react-ant/src/views/Home/Home.tsx",["81"],"import React, { Dispatch } from 'react';\nimport Navigation from '../../components/Navigation';\nimport Header from '../../components/Header';\nimport ShopList from '../../components/ShopList';\nimport Loader from '../../components/Loader';\nimport FoodTypeSkeleton from '../../components/FoodTypeSkeleton';\nimport ShopListSkeleton from '../../components/ShopListSkeleton';\n\nimport { connect } from 'react-redux';\nimport { Carousel } from 'antd-mobile';\nimport { saveAttrInfo } from '../../actions/user';\nimport { is, fromJS } from 'immutable';\nimport { getFoodTypes, getPoisSite, cityGuess, getShopList } from '../../api/api';\n\nimport * as ResType from '../../types/response';\n\nimport './Home.scss';\n\ntype HomeState = {\n    geohash: string[];\n    foodsType: ResType.FootTypeData[][];\n    shopList: ResType.ShopData[];\n    title: string;\n    imgBaseUrl: string;\n};\nclass Home extends React.Component<{ saveAttrInfo: Dispatch<{ dataType: string; value: string[] }> }, HomeState> {\n    constructor(\n        props:\n            | { saveAttrInfo: React.Dispatch<{ dataType: string; value: string[] }> }\n            | Readonly<{ saveAttrInfo: React.Dispatch<{ dataType: string; value: string[] }> }>\n    ) {\n        super(props);\n        this.state = {\n            geohash: [],\n            foodsType: [],\n            shopList: [],\n            title: '正在获取...',\n            imgBaseUrl: 'https://fuss10.elemecdn.com',\n        };\n    }\n\n    /**\n     * 获取食物种类\n     */\n    getFoodTypes = async () => {\n        try {\n            const data = {\n                geohash: this.state.geohash.join(),\n                'flag[]': 'F',\n                group_type: 1,\n            };\n            const res = await getFoodTypes(data);\n\n            const resLength = res.length;\n            const resArr = [...res];\n            const foodArr = [];\n\n            for (let i = 0, j = 0; i < resLength; i += 8, j++) {\n                foodArr[j] = resArr.splice(0, 8);\n            }\n            this.setState({\n                foodsType: foodArr,\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    /**\n     * 根据经纬度获取地点信息\n     */\n    getPoisSite = async (geohash: string) => {\n        try {\n            const res = await getPoisSite(geohash);\n            this.setState({\n                title: res.name,\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    /**\n     * 获取经纬度\n     */\n    cityGuess = async () => {\n        try {\n            const res = await cityGuess({ type: 'guess' });\n            this.setState({\n                geohash: [res.latitude, res.longitude],\n            });\n            this.props.saveAttrInfo({ dataType: 'geohash', value: [res.latitude, res.longitude] });\n            this.getPoisSite(this.state.geohash.join());\n            this.getFoodTypes();\n            this.getShopList(this.state.geohash);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    /**\n     * 获取商家列表\n     */\n    getShopList = async (geohash: string[]) => {\n        try {\n            const data = {\n                latitude: geohash[0],\n                longitude: geohash[1],\n            };\n            const res = await getShopList(data);\n            this.setState({\n                shopList: res,\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    /**\n     * 组件第一次渲染完成，此时dom节点已经生成，可以在这里调用ajax请求，返回数据setState后组件会重新渲染\n     */\n    componentDidMount() {\n        this.cityGuess();\n    }\n\n    /**\n     * 判断是否要更新render, return true 更新  return false不更新\n     */\n    shouldComponentUpdate(nextProps: any, nextState: any): boolean {\n        let refresh = !is(fromJS(this.props), fromJS(nextProps)) || !is(fromJS(this.state), fromJS(nextState));\n        return refresh;\n    }\n\n    render() {\n        const { title, foodsType, imgBaseUrl, shopList } = this.state;\n\n        return (\n            <div>\n                <Header title={title} />\n\n                <div className='content'>\n                    {foodsType.length ? (\n                        <Carousel autoplay={false} infinite>\n                            {foodsType.map((element, index) => {\n                                return (\n                                    <ul className='food-list' key={index}>\n                                        {element.map((item, i) => {\n                                            return (\n                                                <li className='food-item' key={i}>\n                                                    <img src={imgBaseUrl + item.image_url} alt={item.title} />\n                                                    <p>{item.title}</p>\n                                                </li>\n                                            );\n                                        })}\n                                    </ul>\n                                );\n                            })}\n                        </Carousel>\n                    ) : (\n                        <FoodTypeSkeleton />\n                    )}\n\n                    <div className='shop'>{shopList.length ? <ShopList list={shopList} /> : <ShopListSkeleton />}</div>\n                </div>\n\n                <Navigation />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        saveAttrInfo: ({ dataType, value }: { dataType: string; value: string[] }) =>\n            dispatch(saveAttrInfo({ dataType, value })),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Home);\n","/Users/huangzx/react-ant/src/store/action-type.ts",[],"/Users/huangzx/react-ant/src/api/api.ts",[],"/Users/huangzx/react-ant/src/components/Header.tsx",[],"/Users/huangzx/react-ant/src/views/Mine/Mine.tsx",["82","83","84","85","86"],"import React from 'react';\nimport QueueAnim from 'rc-queue-anim'; // 进场动画\n\nimport Navigation from '../../components/Navigation';\nimport Header from '../../components/Header';\nimport UserIcon from '../../assets/images/face.png';\nimport PhoneIcon from '../../assets/images/phone.png';\nimport OrderIcon from '../../assets/images/icon-icon-copy.png';\nimport ShopIcon from '../../assets/images/shop-icon.png';\nimport VipIcon from '../../assets/images/VIP.png';\nimport ServerrIcon from '../../assets/images/fuwu.png';\nimport ElementIcon from '../../assets/images/icon-elment-copy.png';\n\nimport { connect } from 'react-redux';\nimport { getUserInfo } from '../../api/api';\nimport { Icon, List } from 'antd-mobile';\nimport { is, fromJS } from 'immutable';\n\nimport './Mine.scss';\n\nimport * as ResTyps from '../../types/response';\n\nconst Item = List.Item;\n\ntype stateType = {\n    navList: {\n        icon: string;\n        name: string;\n    }[];\n};\n\nclass Mine extends React.Component<any, stateType> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            navList: [\n                {\n                    icon: OrderIcon,\n                    name: '我的订单',\n                },\n                {\n                    icon: ShopIcon,\n                    name: '积分商城',\n                },\n                {\n                    icon: VipIcon,\n                    name: '饿了么会员卡',\n                },\n                {\n                    icon: ServerrIcon,\n                    name: '服务中心',\n                },\n                {\n                    icon: ElementIcon,\n                    name: '下载饿了么APP',\n                },\n            ],\n        };\n    }\n\n    render() {\n        const { navList } = this.state;\n\n        return (\n            <div>\n                <Header title={'我的'} />\n                <div className='content'>\n                    <QueueAnim>\n                        {/* 用户信息 */}\n                        <div className='user-info' key='1'>\n                            <div className='user-icon'>\n                                <img src={UserIcon} alt='头像' />\n                            </div>\n                            <div>\n                                <div>\n                                    <h3>登录/注册</h3>\n                                    <p>\n                                        <img src={PhoneIcon} alt='phone' />\n                                        暂无绑定手机\n                                    </p>\n                                </div>\n                                <Icon type='right' />\n                            </div>\n                        </div>\n\n                        {/* 积分信息 */}\n                        <ul className='integration' key='2'>\n                            <li>\n                                <h3>\n                                    0.00<span>元</span>\n                                </h3>\n                                <p>我的余额</p>\n                            </li>\n                            <li>\n                                <h3>\n                                    0.00<span>元</span>\n                                </h3>\n                                <p>我的余额</p>\n                            </li>\n                            <li>\n                                <h3>\n                                    0.00<span>元</span>\n                                </h3>\n                                <p>我的余额</p>\n                            </li>\n                        </ul>\n\n                        {/* 导航列表 */}\n\n                        <List key='3'>\n                            <QueueAnim>\n                                {navList.map((item, i) => {\n                                    return (\n                                        <Item key={i} thumb={item.icon} arrow='horizontal' onClick={() => {}}>\n                                            {item.name}\n                                        </Item>\n                                    );\n                                })}\n                            </QueueAnim>\n                        </List>\n                    </QueueAnim>\n                </div>\n                <Navigation />\n            </div>\n        );\n    }\n}\n\nexport default Mine;\n","/Users/huangzx/react-ant/src/routes/index.tsx",[],"/Users/huangzx/react-ant/src/components/Navigation.tsx",["87"],"import React from 'react';\n\nimport { withRouter } from 'react-router-dom';\nimport { TabBar } from 'antd-mobile';\n\nimport HomeIcon from '../assets/images/elment.png';\nimport HomeActiveIcon from '../assets/images/icon-elment-copy.png';\nimport FindIcon from '../assets/images/faxian.png';\nimport FindActiveIcon from '../assets/images/icon-faxian-copy.png';\nimport OrderIcon from '../assets/images/icon.png';\nimport OrderActiveIcon from '../assets/images/icon-icon-copy.png';\nimport MineIcon from '../assets/images/ziyuan.png';\nimport MineActiveIcon from '../assets/images/icon-ziyuan-copy.png';\n\nimport '../assets/styles/index.scss';\nimport { fromJS } from 'immutable';\n\nclass Navigation extends React.Component<\n    any,\n    {\n        selectedTab: number;\n        fullScreen: boolean;\n        TabBarList: { icon: any; activeIcon: any; title: string; path: string }[];\n    }\n> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            selectedTab: 0,\n            fullScreen: true,\n            TabBarList: [\n                {\n                    icon: <img src={HomeIcon} alt='饿了么' />,\n                    activeIcon: <img src={HomeActiveIcon} alt='饿了么' />,\n                    title: '饿了么',\n                    path: '/home',\n                },\n                {\n                    icon: <img src={FindIcon} alt='搜索' />,\n                    activeIcon: <img src={FindActiveIcon} alt='搜索' />,\n                    title: '搜索',\n                    path: '/',\n                },\n                {\n                    icon: <img src={OrderIcon} alt='订单' />,\n                    activeIcon: <img src={OrderActiveIcon} alt='订单' />,\n                    title: '订单',\n                    path: '/',\n                },\n                {\n                    icon: <img src={MineIcon} alt='我的' />,\n                    activeIcon: <img src={MineActiveIcon} alt='我的' />,\n                    title: '我的',\n                    path: '/mine',\n                },\n            ],\n        };\n    }\n\n    render() {\n        const { TabBarList } = this.state;\n        return (\n            <div className='tabbar'>\n                <TabBar unselectedTintColor='#949494' tintColor='#33A3F4' barTintColor='white'>\n                    {TabBarList.map((item) => (\n                        <TabBar.Item\n                            title={item.title}\n                            key={item.title}\n                            icon={item.icon}\n                            selectedIcon={item.activeIcon}\n                            selected={this.props.location.pathname === item.path}\n                            onPress={() => {\n                                this.props.history.push(item.path);\n                            }}\n                            data-seed='logId'\n                        />\n                    ))}\n                </TabBar>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Navigation);\n","/Users/huangzx/react-ant/src/utils/request.ts",[],"/Users/huangzx/react-ant/src/components/FoodTypeSkeleton.tsx",[],"/Users/huangzx/react-ant/src/views/Login/Login.tsx",[],"/Users/huangzx/react-ant/src/store/user.ts",["88"],"/Users/huangzx/react-ant/src/components/AsyncComponent.tsx",[],"/Users/huangzx/react-ant/src/components/ShopList.tsx",[],"/Users/huangzx/react-ant/src/components/ShopListSkeleton.tsx",["89"],"/Users/huangzx/react-ant/src/configs/envconfig.ts",[],{"ruleId":"90","severity":1,"message":"91","line":12,"column":10,"nodeType":"92","messageId":"93","endLine":12,"endColumn":22},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"90","severity":1,"message":"98","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":14},{"ruleId":"90","severity":1,"message":"99","line":14,"column":10,"nodeType":"92","messageId":"93","endLine":14,"endColumn":17},{"ruleId":"90","severity":1,"message":"100","line":15,"column":10,"nodeType":"92","messageId":"93","endLine":15,"endColumn":21},{"ruleId":"90","severity":1,"message":"101","line":17,"column":10,"nodeType":"92","messageId":"93","endLine":17,"endColumn":12},{"ruleId":"90","severity":1,"message":"102","line":17,"column":14,"nodeType":"92","messageId":"93","endLine":17,"endColumn":20},{"ruleId":"90","severity":1,"message":"103","line":21,"column":13,"nodeType":"92","messageId":"93","endLine":21,"endColumn":20},{"ruleId":"90","severity":1,"message":"102","line":16,"column":10,"nodeType":"92","messageId":"93","endLine":16,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":3,"column":6,"nodeType":"92","messageId":"106","endLine":3,"endColumn":14},{"ruleId":"107","severity":1,"message":"108","line":7,"column":17,"nodeType":"109","endLine":7,"endColumn":21},"@typescript-eslint/no-unused-vars","'AppContainer' is defined but never used.","Identifier","unusedVar","no-native-reassign",["110"],"no-negated-in-lhs",["111"],"'Loader' is defined but never used.","'connect' is defined but never used.","'getUserInfo' is defined but never used.","'is' is defined but never used.","'fromJS' is defined but never used.","'ResTyps' is defined but never used.","@typescript-eslint/no-redeclare","'UserType' is already defined.","redeclared","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]